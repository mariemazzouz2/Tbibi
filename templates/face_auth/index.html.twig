{% block title %}Authentification Faciale{% endblock %}

{% block body %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <div class="container mt-5 d-flex justify-content-center">
        <div class="text-center">
            <h2 class="mb-4">Authentification par Reconnaissance Faciale</h2>
            
            <div class="card p-4 shadow-lg d-inline-block">
                <video id="video" class="border rounded mx-auto d-block" width="400" height="300" autoplay></video>
                <button id="capture" class="btn btn-primary mt-3">Prendre une photo</button>
                
                <canvas id="canvas" width="400" height="300" style="display: none;"></canvas>
                
                <form id="uploadForm" class="mt-3" style="display: none;">
                    <input type="file" id="imageInput" accept="image/*" class="form-control">
                    <button type="submit" class="btn btn-success mt-2">Envoyer</button>
                </form>
                
                <p id="result" class="mt-3 fw-bold"></p>
            </div>
        </div>
    </div>
    
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('capture');
        const resultText = document.getElementById('result');

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(error => {
                console.error('Erreur accès caméra :', error);
            });

        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            canvas.toBlob(blob => {
                const formData = new FormData();
                formData.append('image', blob, 'capture.jpg');

                fetch('/face-auth/login', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const username = data.user.split('-')[0];
                        resultText.innerHTML = `<span class="text-success">Utilisateur reconnu : ${username}</span>`;
                        
                        setTimeout(() => {
                            if (confirm("Utilisateur vérifié! Vous pouvez faire le login. Voulez-vous continuer?")) {
                                window.location.href = "/login";
                            }
                        }, 500);
                    } else {
                        resultText.innerHTML = `<span class="text-danger">${data.message}</span>`;
                    }
                })
                .catch(error => {
                    console.error('Erreur lors de l’envoi de la requête:', error);
                });
            }, 'image/jpeg');
        });
    </script>
{% endblock %}
